EzMap.Layer.Google = OpenLayers.Class(OpenLayers.Layer.XYZ, { name: "Google", chanme: "谷歌", url: ["http://mt0.google.cn/vt?hl=zh-TW&gl=TW&lyrs=m&x=${x}&y=${y}&z=${z}", "http://mt0.google.cn/vt?hl=zh-TW&gl=TW&lyrs=m&x=${x}&y=${y}&z=${z}", "http://mt0.google.cn/vt?hl=zh-TW&gl=TW&lyrs=m&x=${x}&y=${y}&z=${z}"], attribution: "&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors", sphericalMercator: !0, wrapDateLine: !0, tileOptions: null, initialize: function () { OpenLayers.Layer.XYZ.prototype.initialize.apply(this, arguments), this.tileOptions = OpenLayers.Util.extend({ crossOriginKeyword: null }, this.options && this.options.tileOptions) }, clone: function (e) { return null == e && (e = new OpenLayers.Layer.OSM(this.name, this.url, this.getOptions())), e = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [e]) }, addTileMonitoringHooks: function (e) { var t = "olTileReplacing"; e.onLoadStart = function () { this.loading === !1 && (this.loading = !0, this.events.triggerEvent("loadstart")), this.events.triggerEvent("tileloadstart", { tile: e }), this.numLoadingTiles++, !this.singleTile && this.backBuffer && this.gridResolution === this.backBufferResolution && OpenLayers.Element.addClass(e.getTile(), t) }, e.onLoadEnd = function (i) { this.numLoadingTiles--; var n = "unload" === i.type; if (this.events.triggerEvent("tileloaded", { tile: e, aborted: n }), !this.singleTile && !n && this.backBuffer && this.gridResolution === this.backBufferResolution) { var o = e.getTile(); if ("none" === OpenLayers.Element.getStyle(o, "display")) { var r = document.getElementById(e.id + "_bb"); r && r.parentNode.removeChild(r) } OpenLayers.Element.removeClass(o, t) } if (0 === this.numLoadingTiles) { if (this.backBuffer) if (0 === this.backBuffer.childNodes.length) this.removeBackBuffer(); else { this._transitionElement = n ? this.div.lastChild : e.imgDiv; for (var s = this.transitionendEvents, a = s.length - 1; a >= 0; --a) OpenLayers.Event.observe(this._transitionElement, s[a], this._removeBackBuffer); this.backBufferTimerId = window.setTimeout(this._removeBackBuffer, this.removeBackBufferDelay) } this.loading = !1, this.events.triggerEvent("loadend") } }, e.onLoadError = function () { this.events.triggerEvent("tileerror", { tile: e }), e.imgDiv.src = _error_pic }, e.events.on({ loadstart: e.onLoadStart, loadend: e.onLoadEnd, unload: e.onLoadEnd, loaderror: e.onLoadError, scope: this }) }, CLASS_NAME: "MM.Layer.Google" });