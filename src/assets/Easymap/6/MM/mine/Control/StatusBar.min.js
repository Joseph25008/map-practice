EzMap.Control.StatusBar = OpenLayers.Class(OpenLayers.Control, { argParserClass: OpenLayers.Control.ArgParser, element: null, loading: null, loadingCenter: null, mousePosition: null, measureResult: null, background: null, anchor: !1, base: "", displayProjection: null, mm: null, sw_loading: !0, initialize: function (e, t, i) { null === e || "object" != typeof e || OpenLayers.Util.isElement(e) ? (OpenLayers.Control.prototype.initialize.apply(this, [i]), this.element = OpenLayers.Util.getElement(e), this.base = t || document.location.href) : (i = e, this.base = document.location.href, OpenLayers.Control.prototype.initialize.apply(this, [i]), null != this.element && (this.element = OpenLayers.Util.getElement(this.element))) }, destroy: function () { this.element && this.element.parentNode == this.div && (this.div.removeChild(this.element), this.element = null), this.map && (this.map.events.unregister("preaddlayer", this, this.preaddlayer), this.map.events.unregister("addlayer", this, this.addlayer), this.map.events.unregister("mousemove", this, this.redrawMousePosition), this.map.events.unregister("mouseout", this, this.resetMousePosition)), OpenLayers.Control.prototype.destroy.apply(this, arguments) }, setMap: function () { OpenLayers.Control.prototype.setMap.apply(this, arguments); for (var e = 0, t = this.map.controls.length; t > e; e++) { var i = this.map.controls[e]; if (i.CLASS_NAME == this.argParserClass.CLASS_NAME) { i.displayProjection != this.displayProjection && (this.displayProjection = i.displayProjection); break } } e == this.map.controls.length && this.map.addControl(new this.argParserClass({ displayProjection: this.displayProjection })) }, draw: function () { OpenLayers.Control.prototype.draw.apply(this, arguments), this.background = document.createElement("div"), this.background.id = "background", this.background.className = "background", this.measureResult = document.createElement("div"); var e = document.createTextNode(""); this.measureResult.id = "measureResult", this.measureResult.className = "measureResult", this.measureResult.setAttribute("name", "measureResult"), this.measureResult.appendChild(e), this.loading = document.createElement("img"), this.loading.id = "loading", this.loading.src = _$EZMAP.path + "imgs/loading.gif", this.loading.className = "loadingEnd", this.loading.setAttribute("name", "loading"), this.loadingCenter = document.createElement("img"), this.loadingCenter.id = "loadingCenter", this.loadingCenter.src = _$EZMAP.path + "imgs/loading2.gif", this.loadingCenter.className = "loadingEnd", this.loadingCenter.setAttribute("name", "loadingCenter"), this.mousePosition = document.createElement("div"); var t = document.createTextNode(""); this.mousePosition.id = "mousePosition", this.mousePosition.className = "mousePosition", this.mousePosition.setAttribute("name", "mousePosition"), this.mousePosition.appendChild(t), this.div.appendChild(this.mousePosition), this.div.appendChild(this.loading), this.div.appendChild(this.measureResult), this.div.appendChild(this.background), this.div.appendChild(this.loadingCenter), this.map.events.on({ preaddlayer: this.preaddlayer, addlayer: this.addlayer, scope: this }), this.map.events.register("mousemove", this, this.redrawMousePosition), this.map.events.register("mouseout", this, this.resetMousePosition); var i = this.map.getControlsByClass("OpenLayers.Control.Navigation"); return 1 == i.length && i[0].events.register("activate", this, function () { this.measureResult.innerText = "" }), this.div }, setMeasureResult: function (e) { this.measureResult.innerText = e }, redrawMousePosition: function (e) { if (null == e) return void this.reset(); var t = this.map.getLonLatFromPixel(e.xy); this.displayProjection && t.transform(this.map.getProjectionObject(), this.displayProjection); t.lon, t.lat; this.mousePosition.innerText = _$EZMAP.STR_WGS84 + ":" + t.lon.toFixed(6) + " " + t.lat.toFixed(6) + "      " }, resetMousePosition: function () { this.mousePosition.innerText = "" }, preaddlayer: function () { if (0 != this.sw_loading) { this.loading.className = "loadingStart", this.background.className = "background_full", this.loadingCenter.style.display = "inline", this.loadingCenter.style.position = "absolute", this.loadingCenter.style.left = this.map.size.w / 2 + "px", this.loadingCenter.style.top = "-" + this.map.size.h / 2 + "px"; var e = this.map.getControl("_MAIN_NAVIGATION_"); e && e.disableZoomWheel() } }, addlayer: function () { if (0 != this.sw_loading) { var e = this; setTimeout(function () { e.loading.className = "loadingEnd", e.loadingCenter.className = "loadingEnd", e.background.className = "background", e.loadingCenter.style.display = "inline", e.loadingCenter.style.position = "absolute", e.loadingCenter.style.left = "-800px", e.loadingCenter.style.top = "-800px" }, 20); var t = this.map.getControl("_MAIN_NAVIGATION_"); t && t.enableZoomWheel() } }, createParams: function (e, t, i) { e = e || this.map.getCenter(); var s = OpenLayers.Util.getParameters(this.base); if (e) { s.zoom = t || this.map.getZoom(); var n = e.lat, a = e.lon; if (this.displayProjection) { var o = OpenLayers.Projection.transform({ x: a, y: n }, this.map.getProjectionObject(), this.displayProjection); a = o.x, n = o.y } s.lat = Math.round(1e5 * n) / 1e5, s.lon = Math.round(1e5 * a) / 1e5, i = i || this.map.layers, s.layers = ""; for (var r = 0, l = i.length; l > r; r++) { var d = i[r]; s.layers += d.isBaseLayer ? d == this.map.baseLayer ? "B" : "0" : d.getVisibility() ? "T" : "F" } } return s }, CLASS_NAME: "MM.Control.StatusBar" });